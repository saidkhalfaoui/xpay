name: HenriPay CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-maven:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Build Docker image - customerservice
        run: docker build . -t customerservice -f customerservice/Dockerfile

      - name: Build Docker image - henripayapi
        run: docker build . -t henripayapi -f henripayapi/Dockerfile

      - name: Build Docker image - mandatesservice
        run: docker build . -t mandatesservice -f mandatesservice/Dockerfile

      - name: Build Docker image - sepaddservice
        run: docker build . -t sepaddservice -f sepaddservice/Dockerfile

      - name: Run containers and set up PostgreSQL
        run: |
          docker run -d --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres postgres:13
          sleep 15
          docker exec -it postgres psql -U postgres -c "CREATE DATABASE henripay;"

      - name: Run Liquibase migrations
        run: |
          mvn liquibase:update -Dliquibase.url=jdbc:postgresql://localhost:5432/henripay -Dliquibase.username=postgres -Dliquibase.password=postgres

      #TODO: registry
      #- name: Tag Docker image
      #  run: docker tag your-image-name your-registry/your-image-name:v1.0.0
      #- name: Push Docker image
      #  run: docker push your-registry/your-image-name:v1.0.0