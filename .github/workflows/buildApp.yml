name: HenriPay CI with Maven

on:
  push:
    branches: [ "feature/HEN-CI" ]

jobs:
  build-maven:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17 #TODO: 21
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      

      #      - uses: actions/checkout@v3
      #        with:
      #          repository: 'https://github.com/<username>/<repository-name>.git'
      #          ref: main
      #      - name: Set up Maven (if needed)
      #        uses: actions/setup-java@v3
      #        with:
      #          java-version: '17'  # Adjust Java version as needed
      #          cache: 'maven'        # Cache Maven packages to improve performance
      #      - name: Install dependencies (modify for your project)
      #        run: mvn install
      #
      #      - uses: actions/checkout@v3
      #        with:
      #          repository: 'https://github.com/<username>/<repository-name>.git'
      #          ref: second
      #      - name: Set up Maven (if needed)
      #        uses: actions/setup-java@v3
      #        with:
      #          java-version: '17'  # Adjust Java version as needed
      #          cache: 'maven'        # Cache Maven packages to improve performance
      #      - name: Install dependencies (modify for your project)
      #        run: mvn install

      - name: Clean with Maven
        run: mvn clean
      - name: Compile with Maven
        run: mvn compile
      - name: Build with Maven
        run: mvn install

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Run containers and set up PostgreSQL
        run: |
          docker run -d --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres postgres:14
          sleep 15
          docker exec -it postgres psql -U postgres -c "CREATE DATABASE henripay;"

      - name: Run Liquibase migrations
        run: |
          mvn liquibase:update -Dliquibase.url=jdbc:postgresql://localhost:5432/henripay -Dliquibase.username=postgres -Dliquibase.password=postgres
      

      #TODO: registry
      #- name: Tag Docker image
      #  run: docker tag your-image-name your-registry/your-image-name:v1.0.0
      #- name: Push Docker image
      #  run: docker push your-registry/your-image-name:v1.0.0
