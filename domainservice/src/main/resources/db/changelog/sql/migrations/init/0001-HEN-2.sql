drop table if exists metadata cascade;
drop table if exists keys cascade;

create table if not exists metadata
(
    metadata_id       bigint generated by default as identity primary key not null,
    transaction_flows bytea,
    metadata          bytea
);

create table if not exists keys
(
    key_id                bigint generated by default as identity primary key not null,
    key_name              varchar(255)                                        not null,
    key_type              varchar(255)                                        not null check (key_type in ('rsa', 'ec', '3des')), -- corrected line
    additional_info       varchar(255),
    enc_key_value         varchar(255)                                        not null,
    second_key_identifier int,
    constraint fk_keys_self_reference foreign key (second_key_identifier) references keys (key_id)
);


drop table if exists aggregator cascade;
drop table if exists merchant cascade;

create table if not exists aggregator
(
    aggregator_id        bigint generated by default as identity primary key not null,
    aggregator_name      varchar(255)                                        not null,
    aggregator_address   varchar(255)                                        not null,
    aggregator_iban      varchar(255)                                        not null,
    aggregator_meta_data int,
    constraint fk_aggregator_metadata foreign key (aggregator_meta_data) references metadata (metadata_id)
);

create table if not exists merchant
(
    merchant_id            bigint generated by default as identity primary key not null,
    merchant_name          varchar(255)                                        not null,
    merchant_address       varchar(255)                                        not null,
    merchant_iban          varchar(255)                                        not null,
    merchant_code          varchar(255) unique,
    merchant_meta          int,
    id_merchant_aggregator int,
    constraint fk_merchant_metadata foreign key (merchant_meta) references metadata (metadata_id),
    constraint fk_merchant_aggregator foreign key (id_merchant_aggregator) references aggregator (aggregator_id)
);

drop table if exists users cascade;
drop table if exists mandate cascade;
drop table if exists transactions cascade;

create table if not exists users
(
    customer_id_identifier bigint generated by default as identity primary key not null,
    iban                   varchar(255)                                        not null,
    full_name              varchar(255)                                        not null,
    token                  varchar(255) unique,
    address                varchar(255),
    activation_date        date
);

create table if not exists mandate
(
    mandate_identifier bigint generated by default as identity primary key not null,
    customer_id        int                                                 not null,
    merchant_id        int                                                 not null,
    signature_date     date                                                not null,
    start_date         date                                                not null,
    end_date           date,
    constraint fk_mandate_customer foreign key (customer_id) references users (customer_id_identifier),
    constraint fk_mandate_merchant foreign key (merchant_id) references merchant (merchant_id)
);

create table if not exists transactions
(
    transaction_id          bigint generated by default as identity primary key not null,
    transaction_type        varchar(255)                                        not null check (transaction_type in
                                                                                                ('sepa_direct_debit',
                                                                                                 'sepad_credit_transfer',
                                                                                                 'credit_card')),
    external_transaction_id int unique,
    sender_id               int                                                 not null,
    received_id             int                                                 not null,
    execution_date          date                                                not null,
    constraint fk_transaction_sender foreign key (sender_id) references users (customer_id_identifier),
    constraint fk_transaction_receiver foreign key (received_id) references merchant (merchant_id)
);
