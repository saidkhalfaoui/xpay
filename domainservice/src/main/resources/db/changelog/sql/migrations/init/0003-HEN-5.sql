drop table if exists key_usage;
drop table if exists key_profile;
drop type if exists key_source_enum;
create type key_source_enum AS ENUM ( 'GENERATED', 'IMPORTED', 'DERIVED');

drop type if exists key_type_enum;
create type key_type_enum AS ENUM ('DES', 'TripleDES', 'AES', 'RSA');

drop type if exists key_usage_enum;
create type key_usage_enum AS ENUM ( 'ENCRYPT', 'DECRYPT', 'SIGN', 'VERIFY', 'DERIVE', 'WRAP', 'UNWRAP' );


CREATE TABLE key_profile
(
    key_profile_id      BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    key_profile_name    VARCHAR(255),
    key_length          INTEGER,
    key_type            key_type_enum,
    key_source          key_source_enum,
    storage_key_profile BIGINT
);

CREATE TABLE key_usage
(
    key_profile_id BIGINT NOT NULL,
    key_usage      key_usage_enum
);

ALTER TABLE key_profile
    ADD CONSTRAINT FK_KEY_PROFILE_ON_STORAGE_KEY_PROFILE FOREIGN KEY (storage_key_profile) REFERENCES key_profile (key_profile_id);

ALTER TABLE key_usage
    ADD CONSTRAINT fk_key_usage_on_key_profile_entity FOREIGN KEY (key_profile_id) REFERENCES key_profile (key_profile_id);

ALTER TABLE keys
    add column if not exists key_profile_id BIGINT,
    ADD CONSTRAINT FK_KEYS_ON_KEY_PROFILE FOREIGN KEY (key_profile_id) REFERENCES key_profile (key_profile_id);
